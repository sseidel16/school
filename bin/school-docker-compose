#!/usr/bin/env bash
set -e

if [ -z "$SCHOOL_MOODLE_DB" ];
then
    echo 'Error: $SCHOOL_MOODLE_DB is not set'
    exit 1
fi

# Nasty portable way to the directory of this script, following symlink,
# because readlink -f not on OSX. Thanks stack overflow..
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
basedir="$( cd -P "$( dirname "$SOURCE" )/../" && pwd )"
export ASSETDIR="${basedir}/assets"


dockercompose="docker-compose -f ${basedir}/base.yml"

# PHP Version.
export MOODLE_DOCKER_PHP_VERSION=${MOODLE_DOCKER_PHP_VERSION:-7.3}

# Database flavour
if [ "$SCHOOL_MOODLE_DB" != 'pgsql' ];
then
    dockercompose="${dockercompose} -f ${basedir}/db.${SCHOOL_MOODLE_DB}.yml"

fi

# Support PHP version overrides for DB..
filename="${basedir}/db.${SCHOOL_MOODLE_DB}.${MOODLE_DOCKER_PHP_VERSION}.yml"
if [ -f $filename ]; then
    dockercompose="${dockercompose} -f ${filename}"
fi

# External services
if [[ ! -z "$MOODLE_DOCKER_PHPUNIT_EXTERNAL_SERVICES" ]];
then
    dockercompose="${dockercompose} -f ${basedir}/phpunit-external-services.yml"
fi

$dockercompose "$@"
